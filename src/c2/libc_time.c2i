module libc_time;

import c2 local;

type Tm struct {
    c_int tm_sec;    /* Seconds (0-60) */
    c_int tm_min;    /* Minutes (0-59) */
    c_int tm_hour;   /* Hours (0-23) */
    c_int tm_mday;   /* Day of the month (1-31) */
    c_int tm_mon;    /* Month (0-11) */
    c_int tm_year;   /* Year - 1900 */
    c_int tm_wday;   /* Day of the week (0-6, Sunday = 0) */
    c_int tm_yday;   /* Day in the year (0-365, 1 Jan = 0) */
    c_int tm_isdst;  /* Daylight saving time */

    c_long tm_gmtoff;
    const c_char* tm_zone;
}

type Time c_long @(cname="time_t");

fn Time time(Time* tloc);

fn c_char* asctime(const Tm* tm);
fn c_char* asctime_r(const Tm* tm, c_char* buf);

fn c_char* ctime(const Time* timep);
fn c_char* ctime_r(const Time* timep, char* buf);

fn Time* gmtime(const Time* timep);
fn Time* gmtime_r(const Time* timep, Tm* result);

fn Tm* localtime(const Time* timep);
fn Tm* localtime_r(const Time* timep, Tm* result);

fn Time mktime(Tm* tm);

fn c_size strftime(c_char *s, c_size max, const c_char *format, const Tm *tm);

fn c_long clock();

